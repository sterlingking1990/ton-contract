#include "imports/stdlib.fc";

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    
    slice cs = in_msg_full.begin_parse();

    int flags = cs~load_uint(4);

    slice sender_address = cs~load_msg_addr();

    ;;Ensure the in_msg_body has at least 32 bits before loading the operation code
    if (in_msg_body.slice_bits() >= 32) {
        int op = in_msg_body~load_uint(32);

        ;;Check if the operation code is 1
        if (op == 1) {
            ;;Parse the contract's data storage
            slice ds = get_data().begin_parse();
            int value_to_inc = ds~load_uint(32);
            ;;Update the contract's data storage with the incremented value and sender address
            set_data(begin_cell().store_uint(value_to_inc + 1, 32).store_slice(sender_address).end_cell());
            return ();
        }
    }

    return ();
}

(int,slice) get_contract_storage_data() method_id {
    slice ds = get_data().begin_parse();
    return (
        ds~load_uint(32), ;; counter_value
        ds~load_msg_addr() ;; the most recent sender
    );
}


